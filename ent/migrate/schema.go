// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ChannelsColumns holds the columns for the "channels" table.
	ChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "channel_name", Type: field.TypeString, Unique: true, Size: 2147483647},
		{Name: "display_name", Type: field.TypeString, Size: 2147483647},
		{Name: "skip_start", Type: field.TypeUint, Default: 0},
		{Name: "min_duration", Type: field.TypeUint},
		{Name: "url", Type: field.TypeString, Size: 2147483647},
		{Name: "is_fav", Type: field.TypeBool, Default: false},
		{Name: "is_paused", Type: field.TypeBool, Default: false},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tags", Type: field.TypeJSON, Nullable: true},
	}
	// ChannelsTable holds the schema information for the "channels" table.
	ChannelsTable = &schema.Table{
		Name:       "channels",
		Columns:    ChannelsColumns,
		PrimaryKey: []*schema.Column{ChannelsColumns[0]},
	}
	// CommandsColumns holds the columns for the "commands" table.
	CommandsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "pid", Type: field.TypeInt, Nullable: true},
		{Name: "command", Type: field.TypeString, Size: 2147483647},
		{Name: "progress", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "info", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "args", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// CommandsTable holds the schema information for the "commands" table.
	CommandsTable = &schema.Table{
		Name:       "commands",
		Columns:    CommandsColumns,
		PrimaryKey: []*schema.Column{CommandsColumns[0]},
	}
	// JobsColumns holds the columns for the "jobs" table.
	JobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "type", Type: field.TypeString},
		{Name: "payload", Type: field.TypeBytes},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "running", "failed", "done"}, Default: "pending"},
		{Name: "attempt_count", Type: field.TypeInt, Default: 0},
		{Name: "last_error", Type: field.TypeString, Nullable: true},
		{Name: "details", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "channel_jobs", Type: field.TypeInt, Nullable: true},
	}
	// JobsTable holds the schema information for the "jobs" table.
	JobsTable = &schema.Table{
		Name:       "jobs",
		Columns:    JobsColumns,
		PrimaryKey: []*schema.Column{JobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "jobs_channels_jobs",
				Columns:    []*schema.Column{JobsColumns[9]},
				RefColumns: []*schema.Column{ChannelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "job_status_created_at",
				Unique:  false,
				Columns: []*schema.Column{JobsColumns[3], JobsColumns[7]},
			},
		},
	}
	// RecordingsColumns holds the columns for the "recordings" table.
	RecordingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "channel_recordings", Type: field.TypeInt, Nullable: true},
	}
	// RecordingsTable holds the schema information for the "recordings" table.
	RecordingsTable = &schema.Table{
		Name:       "recordings",
		Columns:    RecordingsColumns,
		PrimaryKey: []*schema.Column{RecordingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "recordings_channels_recordings",
				Columns:    []*schema.Column{RecordingsColumns[1]},
				RefColumns: []*schema.Column{ChannelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ChannelsTable,
		CommandsTable,
		JobsTable,
		RecordingsTable,
		SettingsTable,
		UsersTable,
	}
)

func init() {
	JobsTable.ForeignKeys[0].RefTable = ChannelsTable
	RecordingsTable.ForeignKeys[0].RefTable = ChannelsTable
}
