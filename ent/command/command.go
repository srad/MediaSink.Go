// Code generated by ent, DO NOT EDIT.

package command

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the command type in the database.
	Label = "command"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPid holds the string denoting the pid field in the database.
	FieldPid = "pid"
	// FieldCommand holds the string denoting the command field in the database.
	FieldCommand = "command"
	// FieldProgress holds the string denoting the progress field in the database.
	FieldProgress = "progress"
	// FieldInfo holds the string denoting the info field in the database.
	FieldInfo = "info"
	// FieldArgs holds the string denoting the args field in the database.
	FieldArgs = "args"
	// Table holds the table name of the command in the database.
	Table = "commands"
)

// Columns holds all SQL columns for command fields.
var Columns = []string{
	FieldID,
	FieldPid,
	FieldCommand,
	FieldProgress,
	FieldInfo,
	FieldArgs,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Command queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPid orders the results by the pid field.
func ByPid(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPid, opts...).ToFunc()
}

// ByCommand orders the results by the command field.
func ByCommand(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCommand, opts...).ToFunc()
}

// ByProgress orders the results by the progress field.
func ByProgress(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldProgress, opts...).ToFunc()
}

// ByInfo orders the results by the info field.
func ByInfo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInfo, opts...).ToFunc()
}

// ByArgs orders the results by the args field.
func ByArgs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldArgs, opts...).ToFunc()
}
